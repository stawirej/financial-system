@startuml
!include ../C4_Component.puml
!include ../level_1_system_context/person/persons.puml
!include ../level_1_system_context/database/databases.puml
!include ../level_2_container/container/containers.puml

title Component Diagram for Financial System

humanResourcesPerson()

databaseSystem()

Boundary(apiApplicationContainerBoundary, "Api Application", "Container") {
    Boundary(presentationLayer, "presentation", "Layer") {
        Component(ratpackComponent, "ratpack", "Ratpack", "Allows user to interact with system via API.")
    }

    Boundary(applicationLayer, "application", "Layer") {
        Component(financialSystem, "application", "Java", "Application business rules. \nFinancial system use cases.")
    }

    Boundary(domainLayer, "domain", "Layer") {
        Component(employee, "employee", "Java", "Employees entities.")
        Component(exceptions, "exceptions", "Java", "Financial system exceptions.")
        Component(ports, "ports", "Java", "Ports interfaces.")
        Component(salary, "salary", "Java", "Business rules for calculating salaries.")

    }

    Boundary(infrastructure, "infrastructure", "Layer") {
        Component_Ext(postgresAdapter, "postgress-adapter", "Java", "<<TO BE IMPLEMENTED>> Adapter for Postgres database.")
        Component(inMemoryRepository, "In memory repository", "Java", "In memory repository. Fake for testing and demo purposes.")
    }
}

Rel(financialSystem, employee, "Uses")
Rel(financialSystem, exceptions, "Uses")
Rel(financialSystem, ports, "Uses")
Rel(financialSystem, salary, "Uses")

Rel(humanResources, ratpackComponent, "Makes API calls to", "JSON/HTTP")
Rel(ratpackComponent, financialSystem, "Uses", "Java")

Rel_U(postgresAdapter, ports, "Implements", "Java")

Rel(inMemoryRepository, ports, "Implements", "Java")
Rel(postgresAdapter, database, "Reads and writes employee information", "JDBC")

@enduml
